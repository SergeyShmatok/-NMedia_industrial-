package ru.netology.nmedia.entity

import androidx.room.Entity
import androidx.room.PrimaryKey
import ru.netology.nmedia.dto.Post

@Entity
data class PostEntity(
    @PrimaryKey(autoGenerate = true)
    val id: Long,
    val author: String,
    val content: String,
    val published: String,
    val likedByMe: Boolean,
    val likes: Int = 0,
    val authorAvatar: String,
    // var attachment: Attachment? = null
    ) {

    fun toDto() = Post(
        id, author, content, published, likedByMe, likes,
        authorAvatar,
    ) // –ü–æ —Å—É—Ç–∏, —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Å—Ç–∞–Ω—Å Post
      // –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ –ø–æ–ª—è –ø–æ–ª—è–º–∏ —Å–≤–æ–µ–≥–æ –∫–ª–∞—Å—Å–∞ (—ç–∫–∑–µ–º–ø–ª—è—Ä–∞).
      // –•–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤ —Å–≤—è–∑–∫–µ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ (**) —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—èüëá

    companion object {
        fun fromDto(dto: Post) =
            PostEntity(dto.id, dto.author, dto.content,
                dto.published, dto.likedByMe, dto.likes, dto.authorAvatar)
    }

}

fun List<PostEntity>.toDto(): List<Post> = map(PostEntity::toDto) // (**)
// fun List<PostEntity>.toDto(): List<Post> = map { it.toDto() } - –∏–ª–∏ —Ç–∞–∫
fun List<Post>.toEntity(): List<PostEntity> = map(PostEntity::fromDto)


//--------------------------------------------------------------------------------------------------
//                                      - –í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç -
//  fun toDto(entity: PostEntity) = Post(
//        entity.id, entity.author, entity.content, entity.published, entity.likedByMe, entity.likes,
//        authorAvatar = "",
//    )
//
//    companion object {
//        fun fromDto(dto: Post) =
//            PostEntity(dto.id, dto.author, dto.content, dto.published, dto.likedByMe, dto.likes)
//    }
//--------------------------------------------------------------------------------------------------